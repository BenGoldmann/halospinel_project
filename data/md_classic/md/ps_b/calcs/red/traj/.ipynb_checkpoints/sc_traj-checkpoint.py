# Boilerplate code generated by OVITO Pro 3.6.0
from ovito.io import *
from ovito.modifiers import *
from ovito.data import *
from ovito.pipeline import *
from ovito.vis import *
import PySide2.QtCore

# Data import:
pipeline = import_file('red_300.lammpstrj', multiple_frames = True)

# Manual modifications of the imported data objects:
def modify_pipeline_input(frame: int, data: DataCollection):
    data.particles_.particle_types_.type_by_id_(1).name = 'Li'
    data.particles_.particle_types_.type_by_id_(2).name = 'Sc'
    data.particles_.particle_types_.type_by_id_(3).name = 'Cl'
pipeline.modifiers.append(modify_pipeline_input)

# Visual element initialization:
data = pipeline.compute() # Evaluate new pipeline to gain access to visual elements associated with the imported data objects.
data.particles.vis.enabled = False
del data # Done accessing input DataCollection of pipeline.
pipeline.add_to_scene()

# Expression selection:
pipeline.modifiers.append(ExpressionSelectionModifier(expression = 'ParticleType==2'))

# Generate trajectory lines:
mod = GenerateTrajectoryLinesModifier()
mod.frame_interval = (10000, 20000)
mod.vis.color = (0.0, 0.9914396887159533, 1.0)
pipeline.modifiers.append(mod)
mod.generate()

# Viewport setup:
vp = Viewport(
    type = Viewport.Type.Perspective, 
    fov = 0.610865238198, 
    camera_dir = (-0.49923017660270624, 0.665640235470275, -0.5547001962252291), 
    camera_pos = (77.28294055433507, -67.14523173911336, 84.25808894926122))

# Rendering:
vp.render_image(filename='image.png', size=(640, 480))