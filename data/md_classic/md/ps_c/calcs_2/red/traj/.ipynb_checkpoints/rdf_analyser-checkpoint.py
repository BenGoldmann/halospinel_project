# Boilerplate code generated by OVITO Pro 3.6.0
from ovito.io import *
from ovito.modifiers import *
from ovito.data import *
from ovito.pipeline import *
import numpy as np

# Data import:
pipeline = import_file('red_300.lammpstrj', multiple_frames = True)

# Manual modifications of the imported data objects:
def modify_pipeline_input(frame: int, data: DataCollection):
    data.particles_.particle_types_.type_by_id_(1).name = 'Li'
    data.particles_.particle_types_.type_by_id_(2).name = 'Sc'
    data.particles_.particle_types_.type_by_id_(3).name = 'Cl'
pipeline.modifiers.append(modify_pipeline_input)

# Expression selection:
pipeline.modifiers.append(ExpressionSelectionModifier(expression = 'ParticleType == 1'))

# Invert selection:
#pipeline.modifiers.append(InvertSelectionModifier())

# Coordination analysis:
pipeline.modifiers.append(CoordinationAnalysisModifier(
    cutoff = 10.0, 
    number_of_bins = 100, 
    only_selected = True))

# Time averaging:
pipeline.modifiers.append(TimeAveragingModifier(
    interval = (19050, 20050), 
    operate_on = 'table:coordination-rdf'))

# Export calculated MSD value to a text file and let OVITO's data pipeline do the rest:
export_file(pipeline, 'rdf_data_li.txt', 'txt/table', key='coordination-rdf[average]', multiple_frames=False)
